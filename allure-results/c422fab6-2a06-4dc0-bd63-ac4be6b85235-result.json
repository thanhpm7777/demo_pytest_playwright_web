{"name": "test_register_valid", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1045, \"Access denied for user 'thanh'@'localhost' (using password: NO)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "trace": "self = <sqlalchemy.engine.base.Connection object at 0x0000015C874284D0>, engine = Engine(mysql+pymysql://:***@:3306/), connection = None, _has_events = None, _allow_revalidate = True, _allow_autobegin = True\n\n    def __init__(\n        self,\n        engine: Engine,\n        connection: Optional[PoolProxiedConnection] = None,\n        _has_events: Optional[bool] = None,\n        _allow_revalidate: bool = True,\n        _allow_autobegin: bool = True,\n    ):\n        \"\"\"Construct a new Connection.\"\"\"\n        self.engine = engine\n        self.dialect = dialect = engine.dialect\n    \n        if connection is None:\n            try:\n>               self._dbapi_connection = engine.raw_connection()\n\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3301: in raw_connection\n    return self.pool.connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:447: in connect\n    return _ConnectionFairy._checkout(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:1264: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:711: in checkout\n    rec = pool._do_get()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:177: in _do_get\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:175: in _do_get\n    return self._create_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:388: in _create_connection\n    return _ConnectionRecord(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:673: in __init__\n    self.__connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:899: in __connect\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:895: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py:661: in connect\n    return dialect.connect(*cargs, **cparams)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:629: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n.venv\\Lib\\site-packages\\pymysql\\connections.py:365: in __init__\n    self.connect()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:681: in connect\n    self._request_authentication()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:958: in _request_authentication\n    auth_packet = self._read_packet()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:782: in _read_packet\n    packet.raise_for_error()\n.venv\\Lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff\\x15\\x04#28000Access denied for user 'thanh'@'localhost' (using password: NO)\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1045, \"Access denied for user 'thanh'@'localhost' (using password: NO)\")\n\n.venv\\Lib\\site-packages\\pymysql\\err.py:150: OperationalError\n\nThe above exception was the direct cause of the following exception:\n\npage = <Page url='https://hocvancokimngan.com/register_user/'>\n\n    @pytest.mark.ui\n    @pytest.mark.auth\n    @pytest.mark.regression\n    @allure.feature(\"Auth\")\n    @allure.story(\"Register\")\n    def test_register_valid(page):\n        auth = AuthPage(page).goto_register()\n        username =\"ThanhQA\"\n        email = \"newuser@example.com\"\n        auth.register(username=\"ThanhQA\", email=email, password=\"123456\", confirm_pass=\"123456\")\n        with allure.step(\"Verify user vừa đăng ký đã tồn tại trong MySQL\"):\n>           rows = run_query(\n                \"SELECT email FROM user_profile_user WHERE email = :email\",\n                {\"email\": email})\n\ntests\\auth\\test_register.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconfigs\\db.py:22: in run_query\n    with engine.connect() as conn:\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3277: in connect\n    return self._connection_cls(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:145: in __init__\n    Connection._handle_dbapi_exception_noconnection(\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:2440: in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:143: in __init__\n    self._dbapi_connection = engine.raw_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3301: in raw_connection\n    return self.pool.connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:447: in connect\n    return _ConnectionFairy._checkout(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:1264: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:711: in checkout\n    rec = pool._do_get()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:177: in _do_get\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:175: in _do_get\n    return self._create_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:388: in _create_connection\n    return _ConnectionRecord(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:673: in __init__\n    self.__connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:899: in __connect\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:895: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py:661: in connect\n    return dialect.connect(*cargs, **cparams)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:629: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n.venv\\Lib\\site-packages\\pymysql\\connections.py:365: in __init__\n    self.connect()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:681: in connect\n    self._request_authentication()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:958: in _request_authentication\n    auth_packet = self._read_packet()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:782: in _read_packet\n    packet.raise_for_error()\n.venv\\Lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff\\x15\\x04#28000Access denied for user 'thanh'@'localhost' (using password: NO)\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1045, \"Access denied for user 'thanh'@'localhost' (using password: NO)\")\nE       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n\n.venv\\Lib\\site-packages\\pymysql\\err.py:150: OperationalError"}, "steps": [{"name": "Goto Register", "status": "passed", "start": 1756180514699, "stop": 1756180516045}, {"name": "Register user", "status": "passed", "parameters": [{"name": "username", "value": "'ThanhQA'"}, {"name": "email", "value": "'newuser@example.com'"}, {"name": "password", "value": "'123456'"}, {"name": "confirm_pass", "value": "'123456'"}], "start": 1756180516046, "stop": 1756180516364}, {"name": "Verify user vừa đăng ký đã tồn tại trong MySQL", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1045, \"Access denied for user 'thanh'@'localhost' (using password: NO)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n", "trace": "  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\tests\\auth\\test_register.py\", line 18, in test_register_valid\n    rows = run_query(\n           ^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\configs\\db.py\", line 22, in run_query\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3277, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2440, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 143, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3301, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 447, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 711, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    with util.safe_reraise():\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 175, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 388, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 673, in __init__\n    self.__connect()\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 899, in __connect\n    with util.safe_reraise():\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 895, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 661, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 629, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 365, in __init__\n    self.connect()\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 681, in connect\n    self._request_authentication()\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 958, in _request_authentication\n    auth_packet = self._read_packet()\n                  ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 782, in _read_packet\n    packet.raise_for_error()\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\Users\\thanh\\PycharmProjects\\demo_pytest_playwright_web\\.venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\n"}, "start": 1756180516364, "stop": 1756180516399}], "start": 1756180514699, "stop": 1756180516401, "uuid": "44924dd1-43be-4ac1-a799-92bb5aaf53f6", "historyId": "6f55718ea0bec09ba40ede5f445c18f1", "testCaseId": "6f55718ea0bec09ba40ede5f445c18f1", "fullName": "tests.auth.test_register#test_register_valid", "labels": [{"name": "story", "value": "Register"}, {"name": "feature", "value": "Auth"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "auth"}, {"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests.auth"}, {"name": "suite", "value": "test_register"}, {"name": "host", "value": "Thanh-PC"}, {"name": "thread", "value": "20604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.auth.test_register"}]}