{"name": "test_login_valid", "status": "broken", "statusDetails": {"message": "AttributeError: 'Settings' object has no attribute 'PW_TIMEOUT_MS'. Did you mean: 'PW_TIMEOUT'?", "trace": "browser = <Browser type=<BrowserType name=chromium executable_path=C:\\Users\\thanh\\AppData\\Local\\ms-playwright\\chromium-1181\\chrome-win\\chrome.exe> version=139.0.7258.5>\n\n    @pytest.fixture\n    def context(browser):\n        ctx = browser.new_context(\n            base_url=settings.BASE_URL,\n            record_video_dir=\"videos\" if settings.RECORD_VIDEO else None,\n        )\n>       ctx.set_default_timeout(settings.PW_TIMEOUT_MS)\n\nconftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Settings(BASE_URL='https://hocvancokimngan.com/', USER_EMAIL='', USER_PASSWORD='', PW_BROWSER='chromium', PW_HEADLESS=False, PW_TIMEOUT=10000, RECORD_VIDEO=False), item = 'PW_TIMEOUT_MS'\n\n    def __getattr__(self, item: str) -> Any:\n        private_attributes = object.__getattribute__(self, '__private_attributes__')\n        if item in private_attributes:\n            attribute = private_attributes[item]\n            if hasattr(attribute, '__get__'):\n                return attribute.__get__(self, type(self))  # type: ignore\n    \n            try:\n                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items\n                return self.__pydantic_private__[item]  # type: ignore\n            except KeyError as exc:\n                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n        else:\n            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.\n            # See `BaseModel.__repr_args__` for more details\n            try:\n                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')\n            except AttributeError:\n                pydantic_extra = None\n    \n            if pydantic_extra:\n                try:\n                    return pydantic_extra[item]\n                except KeyError as exc:\n                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n            else:\n                if hasattr(self.__class__, item):\n                    return super().__getattribute__(item)  # Raises AttributeError if appropriate\n                else:\n                    # this is the current error\n>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE                   AttributeError: 'Settings' object has no attribute 'PW_TIMEOUT_MS'. Did you mean: 'PW_TIMEOUT'?\n\n.venv\\Lib\\site-packages\\pydantic\\main.py:991: AttributeError"}, "start": 1756044661260, "stop": 1756044661260, "uuid": "25fc7052-8b8d-4e0d-8584-f55e0ec3aa8d", "historyId": "f370b6ae400907e33b53daf29861cd3c", "testCaseId": "f370b6ae400907e33b53daf29861cd3c", "fullName": "tests.auth.test_login_valid#test_login_valid", "labels": [{"name": "feature", "value": "Auth"}, {"name": "story", "value": "Login"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "auth"}, {"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests.auth"}, {"name": "suite", "value": "test_login_valid"}, {"name": "host", "value": "Thanh-PC"}, {"name": "thread", "value": "10372-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.auth.test_login_valid"}]}